// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: lrc20.proto

package lrc20

import (
	spark "github.com/lightsparkdev/spark-go/proto/spark"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendSparkTxRequest struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	IdentityPublicKey     []byte                  `protobuf:"bytes,1,opt,name=identity_public_key,json=identityPublicKey,proto3" json:"identity_public_key,omitempty"`
	FinalTokenTransaction *spark.TokenTransaction `protobuf:"bytes,2,opt,name=final_token_transaction,json=finalTokenTransaction,proto3" json:"final_token_transaction,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SendSparkTxRequest) Reset() {
	*x = SendSparkTxRequest{}
	mi := &file_lrc20_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendSparkTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSparkTxRequest) ProtoMessage() {}

func (x *SendSparkTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lrc20_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSparkTxRequest.ProtoReflect.Descriptor instead.
func (*SendSparkTxRequest) Descriptor() ([]byte, []int) {
	return file_lrc20_proto_rawDescGZIP(), []int{0}
}

func (x *SendSparkTxRequest) GetIdentityPublicKey() []byte {
	if x != nil {
		return x.IdentityPublicKey
	}
	return nil
}

func (x *SendSparkTxRequest) GetFinalTokenTransaction() *spark.TokenTransaction {
	if x != nil {
		return x.FinalTokenTransaction
	}
	return nil
}

type SendSparkSignatureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SignatureData *SparkSignatureData    `protobuf:"bytes,1,opt,name=signature_data,json=signatureData,proto3" json:"signature_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendSparkSignatureRequest) Reset() {
	*x = SendSparkSignatureRequest{}
	mi := &file_lrc20_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendSparkSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSparkSignatureRequest) ProtoMessage() {}

func (x *SendSparkSignatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lrc20_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSparkSignatureRequest.ProtoReflect.Descriptor instead.
func (*SendSparkSignatureRequest) Descriptor() ([]byte, []int) {
	return file_lrc20_proto_rawDescGZIP(), []int{1}
}

func (x *SendSparkSignatureRequest) GetSignatureData() *SparkSignatureData {
	if x != nil {
		return x.SignatureData
	}
	return nil
}

type SparkSignatureData struct {
	state                          protoimpl.MessageState    `protogen:"open.v1"`
	SparkOperatorSignature         []byte                    `protobuf:"bytes,1,opt,name=spark_operator_signature,json=sparkOperatorSignature,proto3" json:"spark_operator_signature,omitempty"`
	SparkOperatorIdentityPublicKey []byte                    `protobuf:"bytes,2,opt,name=spark_operator_identity_public_key,json=sparkOperatorIdentityPublicKey,proto3" json:"spark_operator_identity_public_key,omitempty"`
	LeavesToSpendData              []*SparkSignatureLeafData `protobuf:"bytes,3,rep,name=leaves_to_spend_data,json=leavesToSpendData,proto3" json:"leaves_to_spend_data,omitempty"`
	FinalTokenTransaction          *spark.TokenTransaction   `protobuf:"bytes,4,opt,name=final_token_transaction,json=finalTokenTransaction,proto3" json:"final_token_transaction,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *SparkSignatureData) Reset() {
	*x = SparkSignatureData{}
	mi := &file_lrc20_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SparkSignatureData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SparkSignatureData) ProtoMessage() {}

func (x *SparkSignatureData) ProtoReflect() protoreflect.Message {
	mi := &file_lrc20_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SparkSignatureData.ProtoReflect.Descriptor instead.
func (*SparkSignatureData) Descriptor() ([]byte, []int) {
	return file_lrc20_proto_rawDescGZIP(), []int{2}
}

func (x *SparkSignatureData) GetSparkOperatorSignature() []byte {
	if x != nil {
		return x.SparkOperatorSignature
	}
	return nil
}

func (x *SparkSignatureData) GetSparkOperatorIdentityPublicKey() []byte {
	if x != nil {
		return x.SparkOperatorIdentityPublicKey
	}
	return nil
}

func (x *SparkSignatureData) GetLeavesToSpendData() []*SparkSignatureLeafData {
	if x != nil {
		return x.LeavesToSpendData
	}
	return nil
}

func (x *SparkSignatureData) GetFinalTokenTransaction() *spark.TokenTransaction {
	if x != nil {
		return x.FinalTokenTransaction
	}
	return nil
}

type SparkSignatureLeafData struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	SpentLeafIndex       uint32                 `protobuf:"varint,1,opt,name=spent_leaf_index,json=spentLeafIndex,proto3" json:"spent_leaf_index,omitempty"`
	RevocationPrivateKey []byte                 `protobuf:"bytes,2,opt,name=revocation_private_key,json=revocationPrivateKey,proto3,oneof" json:"revocation_private_key,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SparkSignatureLeafData) Reset() {
	*x = SparkSignatureLeafData{}
	mi := &file_lrc20_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SparkSignatureLeafData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SparkSignatureLeafData) ProtoMessage() {}

func (x *SparkSignatureLeafData) ProtoReflect() protoreflect.Message {
	mi := &file_lrc20_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SparkSignatureLeafData.ProtoReflect.Descriptor instead.
func (*SparkSignatureLeafData) Descriptor() ([]byte, []int) {
	return file_lrc20_proto_rawDescGZIP(), []int{3}
}

func (x *SparkSignatureLeafData) GetSpentLeafIndex() uint32 {
	if x != nil {
		return x.SpentLeafIndex
	}
	return 0
}

func (x *SparkSignatureLeafData) GetRevocationPrivateKey() []byte {
	if x != nil {
		return x.RevocationPrivateKey
	}
	return nil
}

type GetSparkTxRequest struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	FinalTokenTransactionHash []byte                 `protobuf:"bytes,1,opt,name=final_token_transaction_hash,json=finalTokenTransactionHash,proto3" json:"final_token_transaction_hash,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *GetSparkTxRequest) Reset() {
	*x = GetSparkTxRequest{}
	mi := &file_lrc20_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSparkTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSparkTxRequest) ProtoMessage() {}

func (x *GetSparkTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lrc20_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSparkTxRequest.ProtoReflect.Descriptor instead.
func (*GetSparkTxRequest) Descriptor() ([]byte, []int) {
	return file_lrc20_proto_rawDescGZIP(), []int{4}
}

func (x *GetSparkTxRequest) GetFinalTokenTransactionHash() []byte {
	if x != nil {
		return x.FinalTokenTransactionHash
	}
	return nil
}

type VerifySparkTxRequest struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	FinalTokenTransaction *spark.TokenTransaction `protobuf:"bytes,1,opt,name=final_token_transaction,json=finalTokenTransaction,proto3" json:"final_token_transaction,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *VerifySparkTxRequest) Reset() {
	*x = VerifySparkTxRequest{}
	mi := &file_lrc20_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifySparkTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifySparkTxRequest) ProtoMessage() {}

func (x *VerifySparkTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lrc20_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifySparkTxRequest.ProtoReflect.Descriptor instead.
func (*VerifySparkTxRequest) Descriptor() ([]byte, []int) {
	return file_lrc20_proto_rawDescGZIP(), []int{5}
}

func (x *VerifySparkTxRequest) GetFinalTokenTransaction() *spark.TokenTransaction {
	if x != nil {
		return x.FinalTokenTransaction
	}
	return nil
}

type ListSparkTxsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageToken     []byte                 `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	PageSize      *uint32                `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSparkTxsRequest) Reset() {
	*x = ListSparkTxsRequest{}
	mi := &file_lrc20_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSparkTxsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSparkTxsRequest) ProtoMessage() {}

func (x *ListSparkTxsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lrc20_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSparkTxsRequest.ProtoReflect.Descriptor instead.
func (*ListSparkTxsRequest) Descriptor() ([]byte, []int) {
	return file_lrc20_proto_rawDescGZIP(), []int{6}
}

func (x *ListSparkTxsRequest) GetPageToken() []byte {
	if x != nil {
		return x.PageToken
	}
	return nil
}

func (x *ListSparkTxsRequest) GetPageSize() uint32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

type ListSparkTxsResponse struct {
	state             protoimpl.MessageState      `protogen:"open.v1"`
	TokenTransactions []*TokenTransactionResponse `protobuf:"bytes,1,rep,name=token_transactions,json=tokenTransactions,proto3" json:"token_transactions,omitempty"`
	NextPageToken     []byte                      `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3,oneof" json:"next_page_token,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListSparkTxsResponse) Reset() {
	*x = ListSparkTxsResponse{}
	mi := &file_lrc20_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSparkTxsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSparkTxsResponse) ProtoMessage() {}

func (x *ListSparkTxsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lrc20_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSparkTxsResponse.ProtoReflect.Descriptor instead.
func (*ListSparkTxsResponse) Descriptor() ([]byte, []int) {
	return file_lrc20_proto_rawDescGZIP(), []int{7}
}

func (x *ListSparkTxsResponse) GetTokenTransactions() []*TokenTransactionResponse {
	if x != nil {
		return x.TokenTransactions
	}
	return nil
}

func (x *ListSparkTxsResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type GetSparkTxResponse struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	FinalTokenTransaction *spark.TokenTransaction `protobuf:"bytes,1,opt,name=final_token_transaction,json=finalTokenTransaction,proto3" json:"final_token_transaction,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetSparkTxResponse) Reset() {
	*x = GetSparkTxResponse{}
	mi := &file_lrc20_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSparkTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSparkTxResponse) ProtoMessage() {}

func (x *GetSparkTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lrc20_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSparkTxResponse.ProtoReflect.Descriptor instead.
func (*GetSparkTxResponse) Descriptor() ([]byte, []int) {
	return file_lrc20_proto_rawDescGZIP(), []int{8}
}

func (x *GetSparkTxResponse) GetFinalTokenTransaction() *spark.TokenTransaction {
	if x != nil {
		return x.FinalTokenTransaction
	}
	return nil
}

type TokenTransactionResponse struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	Finalized             bool                    `protobuf:"varint,1,opt,name=finalized,proto3" json:"finalized,omitempty"`
	FinalTokenTransaction *spark.TokenTransaction `protobuf:"bytes,2,opt,name=final_token_transaction,json=finalTokenTransaction,proto3" json:"final_token_transaction,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *TokenTransactionResponse) Reset() {
	*x = TokenTransactionResponse{}
	mi := &file_lrc20_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenTransactionResponse) ProtoMessage() {}

func (x *TokenTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lrc20_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenTransactionResponse.ProtoReflect.Descriptor instead.
func (*TokenTransactionResponse) Descriptor() ([]byte, []int) {
	return file_lrc20_proto_rawDescGZIP(), []int{9}
}

func (x *TokenTransactionResponse) GetFinalized() bool {
	if x != nil {
		return x.Finalized
	}
	return false
}

func (x *TokenTransactionResponse) GetFinalTokenTransaction() *spark.TokenTransaction {
	if x != nil {
		return x.FinalTokenTransaction
	}
	return nil
}

type ListWithdrawnLeavesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blockhash     []byte                 `protobuf:"bytes,1,opt,name=blockhash,proto3,oneof" json:"blockhash,omitempty"`
	PageToken     *string                `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	PageSize      *uint32                `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWithdrawnLeavesRequest) Reset() {
	*x = ListWithdrawnLeavesRequest{}
	mi := &file_lrc20_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWithdrawnLeavesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWithdrawnLeavesRequest) ProtoMessage() {}

func (x *ListWithdrawnLeavesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lrc20_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWithdrawnLeavesRequest.ProtoReflect.Descriptor instead.
func (*ListWithdrawnLeavesRequest) Descriptor() ([]byte, []int) {
	return file_lrc20_proto_rawDescGZIP(), []int{10}
}

func (x *ListWithdrawnLeavesRequest) GetBlockhash() []byte {
	if x != nil {
		return x.Blockhash
	}
	return nil
}

func (x *ListWithdrawnLeavesRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListWithdrawnLeavesRequest) GetPageSize() uint32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

type ListWithdrawnLeavesResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Leaves        []*spark.TokenLeafOutput `protobuf:"bytes,1,rep,name=leaves,proto3" json:"leaves,omitempty"`
	NextPageToken *string                  `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3,oneof" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWithdrawnLeavesResponse) Reset() {
	*x = ListWithdrawnLeavesResponse{}
	mi := &file_lrc20_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWithdrawnLeavesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWithdrawnLeavesResponse) ProtoMessage() {}

func (x *ListWithdrawnLeavesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lrc20_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWithdrawnLeavesResponse.ProtoReflect.Descriptor instead.
func (*ListWithdrawnLeavesResponse) Descriptor() ([]byte, []int) {
	return file_lrc20_proto_rawDescGZIP(), []int{11}
}

func (x *ListWithdrawnLeavesResponse) GetLeaves() []*spark.TokenLeafOutput {
	if x != nil {
		return x.Leaves
	}
	return nil
}

func (x *ListWithdrawnLeavesResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

var File_lrc20_proto protoreflect.FileDescriptor

const file_lrc20_proto_rawDesc = "" +
	"\n" +
	"\vlrc20.proto\x12\x06rpc.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a\vspark.proto\"\x95\x01\n" +
	"\x12SendSparkTxRequest\x12.\n" +
	"\x13identity_public_key\x18\x01 \x01(\fR\x11identityPublicKey\x12O\n" +
	"\x17final_token_transaction\x18\x02 \x01(\v2\x17.spark.TokenTransactionR\x15finalTokenTransaction\"^\n" +
	"\x19SendSparkSignatureRequest\x12A\n" +
	"\x0esignature_data\x18\x01 \x01(\v2\x1a.rpc.v1.SparkSignatureDataR\rsignatureData\"\xbc\x02\n" +
	"\x12SparkSignatureData\x128\n" +
	"\x18spark_operator_signature\x18\x01 \x01(\fR\x16sparkOperatorSignature\x12J\n" +
	"\"spark_operator_identity_public_key\x18\x02 \x01(\fR\x1esparkOperatorIdentityPublicKey\x12O\n" +
	"\x14leaves_to_spend_data\x18\x03 \x03(\v2\x1e.rpc.v1.SparkSignatureLeafDataR\x11leavesToSpendData\x12O\n" +
	"\x17final_token_transaction\x18\x04 \x01(\v2\x17.spark.TokenTransactionR\x15finalTokenTransaction\"\x98\x01\n" +
	"\x16SparkSignatureLeafData\x12(\n" +
	"\x10spent_leaf_index\x18\x01 \x01(\rR\x0espentLeafIndex\x129\n" +
	"\x16revocation_private_key\x18\x02 \x01(\fH\x00R\x14revocationPrivateKey\x88\x01\x01B\x19\n" +
	"\x17_revocation_private_key\"T\n" +
	"\x11GetSparkTxRequest\x12?\n" +
	"\x1cfinal_token_transaction_hash\x18\x01 \x01(\fR\x19finalTokenTransactionHash\"g\n" +
	"\x14VerifySparkTxRequest\x12O\n" +
	"\x17final_token_transaction\x18\x01 \x01(\v2\x17.spark.TokenTransactionR\x15finalTokenTransaction\"x\n" +
	"\x13ListSparkTxsRequest\x12\"\n" +
	"\n" +
	"page_token\x18\x01 \x01(\fH\x00R\tpageToken\x88\x01\x01\x12 \n" +
	"\tpage_size\x18\x02 \x01(\rH\x01R\bpageSize\x88\x01\x01B\r\n" +
	"\v_page_tokenB\f\n" +
	"\n" +
	"_page_size\"\xa8\x01\n" +
	"\x14ListSparkTxsResponse\x12O\n" +
	"\x12token_transactions\x18\x01 \x03(\v2 .rpc.v1.TokenTransactionResponseR\x11tokenTransactions\x12+\n" +
	"\x0fnext_page_token\x18\x02 \x01(\fH\x00R\rnextPageToken\x88\x01\x01B\x12\n" +
	"\x10_next_page_token\"e\n" +
	"\x12GetSparkTxResponse\x12O\n" +
	"\x17final_token_transaction\x18\x01 \x01(\v2\x17.spark.TokenTransactionR\x15finalTokenTransaction\"\x89\x01\n" +
	"\x18TokenTransactionResponse\x12\x1c\n" +
	"\tfinalized\x18\x01 \x01(\bR\tfinalized\x12O\n" +
	"\x17final_token_transaction\x18\x02 \x01(\v2\x17.spark.TokenTransactionR\x15finalTokenTransaction\"\xb0\x01\n" +
	"\x1aListWithdrawnLeavesRequest\x12!\n" +
	"\tblockhash\x18\x01 \x01(\fH\x00R\tblockhash\x88\x01\x01\x12\"\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tH\x01R\tpageToken\x88\x01\x01\x12 \n" +
	"\tpage_size\x18\x03 \x01(\rH\x02R\bpageSize\x88\x01\x01B\f\n" +
	"\n" +
	"_blockhashB\r\n" +
	"\v_page_tokenB\f\n" +
	"\n" +
	"_page_size\"\x8e\x01\n" +
	"\x1bListWithdrawnLeavesResponse\x12.\n" +
	"\x06leaves\x18\x01 \x03(\v2\x16.spark.TokenLeafOutputR\x06leaves\x12+\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tH\x00R\rnextPageToken\x88\x01\x01B\x12\n" +
	"\x10_next_page_token2\xa2\x04\n" +
	"\fSparkService\x12A\n" +
	"\vSendSparkTx\x12\x1a.rpc.v1.SendSparkTxRequest\x1a\x16.google.protobuf.Empty\x12O\n" +
	"\x12SendSparkSignature\x12!.rpc.v1.SendSparkSignatureRequest\x1a\x16.google.protobuf.Empty\x12I\n" +
	"\fListSparkTxs\x12\x1b.rpc.v1.ListSparkTxsRequest\x1a\x1c.rpc.v1.ListSparkTxsResponse\x12C\n" +
	"\n" +
	"GetSparkTx\x12\x19.rpc.v1.GetSparkTxRequest\x1a\x1a.rpc.v1.GetSparkTxResponse\x12E\n" +
	"\rVerifySparkTx\x12\x1c.rpc.v1.VerifySparkTxRequest\x1a\x16.google.protobuf.Empty\x12G\n" +
	"\fFreezeTokens\x12\x1a.spark.FreezeTokensRequest\x1a\x1b.spark.FreezeTokensResponse\x12^\n" +
	"\x13ListWithdrawnLeaves\x12\".rpc.v1.ListWithdrawnLeavesRequest\x1a#.rpc.v1.ListWithdrawnLeavesResponseB/Z-github.com/lightsparkdev/spark-go/proto/lrc20b\x06proto3"

var (
	file_lrc20_proto_rawDescOnce sync.Once
	file_lrc20_proto_rawDescData []byte
)

func file_lrc20_proto_rawDescGZIP() []byte {
	file_lrc20_proto_rawDescOnce.Do(func() {
		file_lrc20_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_lrc20_proto_rawDesc), len(file_lrc20_proto_rawDesc)))
	})
	return file_lrc20_proto_rawDescData
}

var file_lrc20_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_lrc20_proto_goTypes = []any{
	(*SendSparkTxRequest)(nil),          // 0: rpc.v1.SendSparkTxRequest
	(*SendSparkSignatureRequest)(nil),   // 1: rpc.v1.SendSparkSignatureRequest
	(*SparkSignatureData)(nil),          // 2: rpc.v1.SparkSignatureData
	(*SparkSignatureLeafData)(nil),      // 3: rpc.v1.SparkSignatureLeafData
	(*GetSparkTxRequest)(nil),           // 4: rpc.v1.GetSparkTxRequest
	(*VerifySparkTxRequest)(nil),        // 5: rpc.v1.VerifySparkTxRequest
	(*ListSparkTxsRequest)(nil),         // 6: rpc.v1.ListSparkTxsRequest
	(*ListSparkTxsResponse)(nil),        // 7: rpc.v1.ListSparkTxsResponse
	(*GetSparkTxResponse)(nil),          // 8: rpc.v1.GetSparkTxResponse
	(*TokenTransactionResponse)(nil),    // 9: rpc.v1.TokenTransactionResponse
	(*ListWithdrawnLeavesRequest)(nil),  // 10: rpc.v1.ListWithdrawnLeavesRequest
	(*ListWithdrawnLeavesResponse)(nil), // 11: rpc.v1.ListWithdrawnLeavesResponse
	(*spark.TokenTransaction)(nil),      // 12: spark.TokenTransaction
	(*spark.TokenLeafOutput)(nil),       // 13: spark.TokenLeafOutput
	(*spark.FreezeTokensRequest)(nil),   // 14: spark.FreezeTokensRequest
	(*emptypb.Empty)(nil),               // 15: google.protobuf.Empty
	(*spark.FreezeTokensResponse)(nil),  // 16: spark.FreezeTokensResponse
}
var file_lrc20_proto_depIdxs = []int32{
	12, // 0: rpc.v1.SendSparkTxRequest.final_token_transaction:type_name -> spark.TokenTransaction
	2,  // 1: rpc.v1.SendSparkSignatureRequest.signature_data:type_name -> rpc.v1.SparkSignatureData
	3,  // 2: rpc.v1.SparkSignatureData.leaves_to_spend_data:type_name -> rpc.v1.SparkSignatureLeafData
	12, // 3: rpc.v1.SparkSignatureData.final_token_transaction:type_name -> spark.TokenTransaction
	12, // 4: rpc.v1.VerifySparkTxRequest.final_token_transaction:type_name -> spark.TokenTransaction
	9,  // 5: rpc.v1.ListSparkTxsResponse.token_transactions:type_name -> rpc.v1.TokenTransactionResponse
	12, // 6: rpc.v1.GetSparkTxResponse.final_token_transaction:type_name -> spark.TokenTransaction
	12, // 7: rpc.v1.TokenTransactionResponse.final_token_transaction:type_name -> spark.TokenTransaction
	13, // 8: rpc.v1.ListWithdrawnLeavesResponse.leaves:type_name -> spark.TokenLeafOutput
	0,  // 9: rpc.v1.SparkService.SendSparkTx:input_type -> rpc.v1.SendSparkTxRequest
	1,  // 10: rpc.v1.SparkService.SendSparkSignature:input_type -> rpc.v1.SendSparkSignatureRequest
	6,  // 11: rpc.v1.SparkService.ListSparkTxs:input_type -> rpc.v1.ListSparkTxsRequest
	4,  // 12: rpc.v1.SparkService.GetSparkTx:input_type -> rpc.v1.GetSparkTxRequest
	5,  // 13: rpc.v1.SparkService.VerifySparkTx:input_type -> rpc.v1.VerifySparkTxRequest
	14, // 14: rpc.v1.SparkService.FreezeTokens:input_type -> spark.FreezeTokensRequest
	10, // 15: rpc.v1.SparkService.ListWithdrawnLeaves:input_type -> rpc.v1.ListWithdrawnLeavesRequest
	15, // 16: rpc.v1.SparkService.SendSparkTx:output_type -> google.protobuf.Empty
	15, // 17: rpc.v1.SparkService.SendSparkSignature:output_type -> google.protobuf.Empty
	7,  // 18: rpc.v1.SparkService.ListSparkTxs:output_type -> rpc.v1.ListSparkTxsResponse
	8,  // 19: rpc.v1.SparkService.GetSparkTx:output_type -> rpc.v1.GetSparkTxResponse
	15, // 20: rpc.v1.SparkService.VerifySparkTx:output_type -> google.protobuf.Empty
	16, // 21: rpc.v1.SparkService.FreezeTokens:output_type -> spark.FreezeTokensResponse
	11, // 22: rpc.v1.SparkService.ListWithdrawnLeaves:output_type -> rpc.v1.ListWithdrawnLeavesResponse
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_lrc20_proto_init() }
func file_lrc20_proto_init() {
	if File_lrc20_proto != nil {
		return
	}
	file_lrc20_proto_msgTypes[3].OneofWrappers = []any{}
	file_lrc20_proto_msgTypes[6].OneofWrappers = []any{}
	file_lrc20_proto_msgTypes[7].OneofWrappers = []any{}
	file_lrc20_proto_msgTypes[10].OneofWrappers = []any{}
	file_lrc20_proto_msgTypes[11].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_lrc20_proto_rawDesc), len(file_lrc20_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lrc20_proto_goTypes,
		DependencyIndexes: file_lrc20_proto_depIdxs,
		MessageInfos:      file_lrc20_proto_msgTypes,
	}.Build()
	File_lrc20_proto = out.File
	file_lrc20_proto_goTypes = nil
	file_lrc20_proto_depIdxs = nil
}
